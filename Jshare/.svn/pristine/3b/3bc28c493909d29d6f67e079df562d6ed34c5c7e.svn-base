package com.digitalchina.web.common.share.bussiness;

import java.util.List;
import java.util.Map;

import org.apache.commons.collections.CollectionUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.digitalchina.web.common.api.ResultPageVo;
import com.digitalchina.web.common.db.nosql.Query;
import com.digitalchina.web.common.db.nosql.mongo.MongoDBId;
import com.digitalchina.web.common.db.nosql.mongo.MongoQuery;
import com.digitalchina.web.common.db.nosql.mongo.MongoQuery.Select.From.Where;
import com.digitalchina.web.common.db.nosql.mongo.MongoQuery.Select.From.Where.Limit;
import com.digitalchina.web.common.db.nosql.mongo.MongoQuery.Select.From.Where.Limit.OrderBy;
import com.digitalchina.web.common.share.dao.UserMongoDao;
import com.digitalchina.web.common.share.vo.UserVo;
import com.mongodb.client.model.Filters;

/**
 * 类型描述：<br/>
 * 用户管理Manager
 * 
 * @createTime 2016年9月5日
 * @author LJn
 * 
 */
@Service
public class UserBindManager {

	@Autowired
	private UserMongoDao userMongoDao;
	
	/**
	 * 方法描述：<br/>
	 * 增加
	 * 
	 * @createTime 2016年9月6日
	 * @author lijin
	 *
	 * @param applicationMetaSave
	 */
	public void doSave(UserVo userToSave) {

		userMongoDao.insert(userToSave); // MongoDB
	}

	/**
	 * 方法描述：<br/>
	 * 删除
	 * 
	 * @createTime 2016年9月6日
	 * @author lijin
	 *
	 * @param id
	 */
	public boolean doRemove(String id) {

		List<UserVo> records = userMongoDao
				.select(MongoQuery.select(MongoDBId.field).from(UserVo.class)
						.where(Filters.and(MongoDBId.eq(id))).done()).getResultList();

		if (CollectionUtils.isEmpty(records)) {
			return false;
		}

		UserVo userToRemove = records.get(0);

		userMongoDao.delete(userToRemove); // MongoDB
		
		return true;
	}
	

	/**
	 * 方法描述：<br/>
	 * 修改
	 * 
	 * @createTime 2016年9月6日
	 * @author lijin
	 *
	 * @param applicationMetaModify
	 * @return
	 */
	public boolean doModify(UserVo userModify) {

		UserVo result = findVo(userModify.getId());

		if (result == null) {
			return false;
		}

		userMongoDao.update(userModify); // MongoDB
		
		return true;
	}

	/**
	 * 方法描述：<br/>
	 * 条项查询
	 * 
	 * @createTime 2016年9月6日
	 * @author lijin
	 *
	 * @param id
	 * @return
	 */
	public UserVo findVo(String id) {

		Query query = MongoQuery.select().from(UserVo.class).where(MongoDBId.eq(id)).done();

		List<UserVo> result = userMongoDao.select(query).getResultList();

		if(CollectionUtils.isNotEmpty(result)){
			return result.get(0);
		}
		
		return null;
	}
	
	/**
	 * 方法描述：<br/>
	 * 根据用户编号查找
	 * 
	 * @createTime 2016年9月6日
	 * @author lijin
	 *
	 * @param id
	 * @return
	 */
	public UserVo findByUser(String userId) {

		Query query = null;
		
		Limit limitQuery = MongoQuery
				.select()
				.from(UserVo.class)
				.where(Filters.eq("userId", userId));
		
		query = limitQuery.done();
		
		ResultPageVo<UserVo> result = userMongoDao.select(query);
		
		if(CollectionUtils.isNotEmpty(result.getResultList())){
			return result.getResultList().get(0);
		}
		
		return null;
	}
	
	/**
	 * 方法描述：<br/>
	 * 管理端使用，列表查询，可分页
	 * 
	 * @createTime 2016年9月6日
	 * @author lijin
	 *
	 * @param requestPage
	 *            请求页码
	 * @param pageSize
	 *            查询每页大小
	 * @param conditions
	 *            条件
	 * @return
	 */
	public ResultPageVo<UserVo> findVos(Integer requestPage, Integer pageSize,
			Map<String, Object> conditions) {

		Where whereQuery = MongoQuery.select().from(UserVo.class);

		Query query = whereQuery.limit(requestPage, pageSize).done();

		return userMongoDao.select(query);
	}
	
}
