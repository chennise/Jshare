package com.digitalchina.web.common.share.servlet;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.context.support.WebApplicationContextUtils;

import com.digitalchina.web.common.share.api.ShareConstants;
import com.digitalchina.web.common.share.micromsg.MicroMessage;
import com.digitalchina.web.common.share.micromsg.service.IAutoResponseManager;
import com.digitalchina.web.common.share.micromsg.service.impl.AutoResponseManager;
import com.digitalchina.web.common.share.utils.SignUtil;

/**
 * 核心请求处理类 
 * @author LJn
 */
@SuppressWarnings("serial")
public class CoreServlet extends HttpServlet{

	private final static Logger LOG = LogManager.getLogger(CoreServlet.class);
	
	private WebApplicationContext applicationContext;
	private IAutoResponseManager autoResponseManager;
	
	@Override
	public void init(ServletConfig config) throws ServletException {
		super.init(config);
		applicationContext = WebApplicationContextUtils.getRequiredWebApplicationContext(config.getServletContext());
		autoResponseManager = (IAutoResponseManager) applicationContext.getBean("autoResponseManager");
	}

	/** 
	 * 此处的doGet方法：它的作用正是确认请求是否来自于微信服务器
     * 确认请求来自微信服务器 
     */  
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		LOG.info("doGet");
        String signature = req.getParameter("signature");  
        String timestamp = req.getParameter("timestamp");  
        String nonce = req.getParameter("nonce");  
        // 随机字符串  
        String echostr = req.getParameter("echostr");  
        
        PrintWriter out = resp.getWriter();  
        // 通过检验signature对请求进行校验，若校验成功则原样返回echostr，表示接入成功，否则接入失败  
        if (SignUtil.checkSignature(signature, timestamp, nonce)) {
            out.print(echostr);
        }
        out.close();  
        out = null;
	}
	
	/** 
     * 处理微信服务器发来的消息 
     * 消息的接收、处理、响应  
     */  
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		LOG.info("doPost");
		// 将请求、响应的编码均设置为UTF-8（防止中文乱码）  
        request.setCharacterEncoding(ShareConstants.ENCODING);  
        response.setCharacterEncoding(ShareConstants.ENCODING);  
        
        // 调用核心业务类接收消息、处理消息 
        PrintWriter out = response.getWriter();
        List<MicroMessage> messageList = autoResponseManager.updateProcessRequestMessage(request);
        if(messageList != null && messageList.size() > 0) {
	        for(MicroMessage message : messageList) {
	        	String xml = message.getXml();
	        	out.write(xml);
	        	out.flush();
	        }
        } else {
        	out.write("");
        	out.flush();
        }
        if(out != null)
        	out.close();
		// 响应消息  
	}
}
